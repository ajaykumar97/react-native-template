(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[998],{4518:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return c}});var i=n(2122),a=n(9756),l=(n(7294),n(3905)),r=["components"],o={},s=void 0,d={unversionedId:"scripts/package.json",id:"scripts/package.json",isDocsHomePage:!1,title:"package.json",description:"The scripts section of the package.json contains few handy scripts to automate some common operations. You can run any of the desired script like:",source:"@site/docs/scripts/package.json.md",sourceDirName:"scripts",slug:"/scripts/package.json",permalink:"/react-native-template/docs/scripts/package.json",editUrl:"https://github.com/ajaykumar97/react-native-template/edit/master/website/docs/scripts/package.json.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Project Structure",permalink:"/react-native-template/docs/project-structure"}},p=[{value:"androidStagingDebug",id:"androidstagingdebug",children:[]},{value:"androidProductionDebug",id:"androidproductiondebug",children:[]},{value:"iosStagingDebug",id:"iosstagingdebug",children:[]},{value:"iosProductionDebug",id:"iosproductiondebug",children:[]},{value:"start",id:"start",children:[]},{value:"test",id:"test",children:[]},{value:"test:watch",id:"testwatch",children:[]},{value:"lint",id:"lint",children:[]},{value:"postinstall",id:"postinstall",children:[]},{value:"uninstall",id:"uninstall",children:[]}],u={toc:p};function c(e){var t=e.components,n=(0,a.Z)(e,r);return(0,l.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"scripts")," section of the ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," contains few handy scripts to automate some common operations. You can run any of the desired script like:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn <script-name>\n")),(0,l.kt)("p",null,"For example, to run ",(0,l.kt)("inlineCode",{parentName:"p"},"androidStagingDebug"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn androidStagingDebug\n")),(0,l.kt)("p",null,"or, using npm:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm run androidStagingDebug\n")),(0,l.kt)("h2",{id:"androidstagingdebug"},"androidStagingDebug"),(0,l.kt)("p",null,"It will run the ",(0,l.kt)("inlineCode",{parentName:"p"},"debug")," android build with ",(0,l.kt)("inlineCode",{parentName:"p"},"staging")," varient."),(0,l.kt)("h2",{id:"androidproductiondebug"},"androidProductionDebug"),(0,l.kt)("p",null,"It will run the ",(0,l.kt)("inlineCode",{parentName:"p"},"debug")," android build with ",(0,l.kt)("inlineCode",{parentName:"p"},"production")," varient."),(0,l.kt)("h2",{id:"iosstagingdebug"},"iosStagingDebug"),(0,l.kt)("p",null,"It will run the ",(0,l.kt)("inlineCode",{parentName:"p"},"debug")," iOS build with ",(0,l.kt)("inlineCode",{parentName:"p"},"STAGING")," scheme."),(0,l.kt)("h2",{id:"iosproductiondebug"},"iosProductionDebug"),(0,l.kt)("p",null,"It will run the ",(0,l.kt)("inlineCode",{parentName:"p"},"debug")," iOS build with ",(0,l.kt)("inlineCode",{parentName:"p"},"PRODUCTION")," scheme."),(0,l.kt)("h2",{id:"start"},"start"),(0,l.kt)("p",null,"It will start the ",(0,l.kt)("inlineCode",{parentName:"p"},"Metro Bundler"),"."),(0,l.kt)("h2",{id:"test"},"test"),(0,l.kt)("p",null,"It will run all of the test cases."),(0,l.kt)("h2",{id:"testwatch"},"test:watch"),(0,l.kt)("p",null,"It will run the all of the test cases or the specified test case(after the ",(0,l.kt)("inlineCode",{parentName:"p"},"test")," command) in ",(0,l.kt)("inlineCode",{parentName:"p"},"watch")," mode. It will automatically re-run the test cases if any of the ",(0,l.kt)("inlineCode",{parentName:"p"},"test case")," or the ",(0,l.kt)("inlineCode",{parentName:"p"},".js")," file will be changed."),(0,l.kt)("h2",{id:"lint"},"lint"),(0,l.kt)("p",null,"It will check the whole codebase for the ",(0,l.kt)("inlineCode",{parentName:"p"},"lint")," issues."),(0,l.kt)("h2",{id:"postinstall"},"postinstall"),(0,l.kt)("p",null,"These are the set of tasks which will run after every dependency installation. These tasks are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If you are running the project on MacOS, the it will automatically install the ",(0,l.kt)("inlineCode",{parentName:"li"},"pods")," in the ",(0,l.kt)("inlineCode",{parentName:"li"},"ios")," directory. If you are not on a MacOS machine, then it will skip the installing the pods."),(0,l.kt)("li",{parentName:"ul"},"It will run all of the ",(0,l.kt)("inlineCode",{parentName:"li"},"patches")," defined in the ",(0,l.kt)("inlineCode",{parentName:"li"},"patches")," directory. You can find the list of the patched dependencies ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ajaykumar97/react-native-template/tree/master/template/patches"},"here"),".")),(0,l.kt)("h2",{id:"uninstall"},"uninstall"),(0,l.kt)("p",null,"It will run all of the tasks mentioned in the ",(0,l.kt)("inlineCode",{parentName:"p"},"postinstall")," script above after uninstalling any dependency."))}c.isMDXComponent=!0}}]);